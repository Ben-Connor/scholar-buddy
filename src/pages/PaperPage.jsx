import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { getPaperDetails } from "../api/paperApi";

export default function PaperPage() {
  const { paperId } = useParams();
  const [paper, setPaper] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    async function loadPaperDetails() {
      try {
        const data = await getPaperDetails(paperId);
        setPaper(data);
        setLoading(false);
      } catch (err) {
        setError("Failed to load paper details");
        setLoading(false);
      }
    }

    loadPaperDetails();
  }, [paperId]);

  // Placeholder summary until we implement AI summarization
  const placeholderSummary = "This is a placeholder summary of the paper. In the future, this will be generated by an AI model based on the paper's content.";

  if (loading) return <div>Loading paper details...</div>;
  if (error) return <div>{error}</div>;
  if (!paper) return <div>Paper not found</div>;

  return (
    <div className="paper-details">
      <h1>{paper.title}</h1>
      
      <div className="paper-metadata">
        <p>
          <strong>Authors:</strong>{" "}
          {paper.authors?.length
            ? paper.authors.map((a, index) => (
                <span key={index}>{a.name || 'Unknown'}{index < paper.authors.length - 1 ? ', ' : ''}</span>
              ))
            : 'No authors available'}
        </p>
        
        <p><strong>Year:</strong> {paper.year}</p>
        {paper.venue && <p><strong>Venue:</strong> {paper.venue}</p>}
        
        {paper.fieldsOfStudy?.length > 0 && (
          <p>
            <strong>Fields of Study:</strong>{" "}
            {paper.fieldsOfStudy.join(", ")}
          </p>
        )}
      </div>

      <div className="paper-content">
        <h2>Abstract</h2>
        <p>{paper.abstract || "No abstract available"}</p>
        
        <h2>AI Summary</h2>
        <div className="ai-summary">
          <p>{paper.tldr?.text || placeholderSummary}</p>
        </div>
      </div>

      {paper.url && (
        <div className="paper-links">
          <a href={paper.url} target="_blank" rel="noopener noreferrer">
            Read the full paper
          </a>
        </div>
      )}

      {/* Display the PDF link if available */}
      {paper.pdfUrl && (
        <div className="pdf-link">
          <a href={paper.pdfUrl} target="_blank" rel="noopener noreferrer">
            Download PDF
          </a>
        </div>
      )}
    </div>
  );
}
