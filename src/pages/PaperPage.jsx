// src/components/PaperPage.jsx
import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { getPaperDetails } from "../api/paperApi";
import axios from "axios";

export default function PaperPage() {
  const { paperId } = useParams();
  const [paper, setPaper] = useState(null);
  const [pdfText, setPdfText] = useState("");
  const [loading, setLoading] = useState({
    paper: true,
    pdfText: false
  });
  const [error, setError] = useState(null);

  // Fetch paper details
  useEffect(() => {
    async function loadPaperDetails() {
      try {
        const data = await getPaperDetails(paperId);
        setPaper(data);
        setLoading(prev => ({ ...prev, paper: false }));
        
        // If PDF URL exists, extract text
        if (data.pdfUrl) {
          fetchPdfText(data.pdfUrl);
        }
      } catch (err) {
        setError("Failed to load paper details");
        setLoading(prev => ({ ...prev, paper: false }));
      }
    }

    loadPaperDetails();
  }, [paperId]);
  
  // Function to fetch PDF text from Flask backend
  async function fetchPdfText(url) {
    try {
      setLoading(prev => ({ ...prev, pdfText: true }));
      
      // Call your Flask API to extract text
      const response = await axios.post("http://localhost:3000/extract-text", {
        url: url
      });
      
      setPdfText(response.data.text);
    } catch (err) {
      console.error("Failed to extract PDF text:", err);
      // We won't set the main error so we still show paper details
    } finally {
      setLoading(prev => ({ ...prev, pdfText: false }));
    }
  }

  // Placeholder summary
  const placeholderSummary = "This is a placeholder summary of the paper. In the future, this will be generated by an AI model based on the paper's content.";

  if (loading.paper) return <div>Loading paper details...</div>;
  if (error) return <div>{error}</div>;
  if (!paper) return <div>Paper not found</div>;

  return (
    <div className="paper-details">
      <h1>{paper.title}</h1>
      
      <div className="paper-metadata">
        <p>
          <strong>Authors:</strong>{" "}
          {paper.authors?.length
            ? paper.authors.map((a, index) => (
                <span key={index}>{a.name || 'Unknown'}{index < paper.authors.length - 1 ? ', ' : ''}</span>
              ))
            : 'No authors available'}
        </p>
        
        <p><strong>Year:</strong> {paper.year}</p>
        {paper.venue && <p><strong>Venue:</strong> {paper.venue}</p>}
        
        {paper.fieldsOfStudy?.length > 0 && (
          <p>
            <strong>Fields of Study:</strong>{" "}
            {paper.fieldsOfStudy.join(", ")}
          </p>
        )}
      </div>

      <div className="paper-content">
        <h2>Abstract</h2>
        <p>{paper.abstract || "No abstract available"}</p>
        
        <h2>AI Summary</h2>
        <div className="ai-summary">
          <p>{paper.tldr?.text || placeholderSummary}</p>
        </div>
        
        {/* Add PDF Text Section */}
        <h2>Paper Content</h2>
        <div className="pdf-content">
          {loading.pdfText ? (
            <div className="loading-text">Extracting text from PDF...</div>
          ) : pdfText ? (
            <div className="pdf-text-container" style={{ 
              maxHeight: '400px', 
              overflowY: 'auto',
              padding: '15px',
              border: '1px solid #ccc',
              borderRadius: '4px',
              backgroundColor: '#f9f9f9'
            }}>
              {pdfText.split('\n\n').map((paragraph, index) => (
                paragraph.trim() ? (
                  <p key={index} style={{ marginBottom: '15px' }}>{paragraph}</p>
                ) : null
              ))}
            </div>
          ) : (
            <div>
              {paper.pdfUrl ? (
                <p>Click "Extract Paper Text" to view the full content.</p>
              ) : (
                <p>No PDF available for this paper.</p>
              )}
            </div>
          )}
        </div>
      </div>
      
      <div className="paper-actions" style={{ marginTop: '20px', display: 'flex', gap: '10px' }}>
        {paper.url && (
          <a 
            href={paper.url} 
            target="_blank" 
            rel="noopener noreferrer"
            className="action-button"
            style={{
              padding: '10px 15px',
              backgroundColor: '#3498db',
              color: 'white',
              borderRadius: '4px',
              textDecoration: 'none'
            }}
          >
            Read on arXiv
          </a>
        )}

        {paper.pdfUrl && (
          <>
            <a 
              href={paper.pdfUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              className="action-button"
              style={{
                padding: '10px 15px',
                backgroundColor: '#e74c3c',
                color: 'white',
                borderRadius: '4px',
                textDecoration: 'none'
              }}
            >
              Download PDF
            </a>
            
            {!pdfText && !loading.pdfText && (
              <button 
                onClick={() => fetchPdfText(paper.pdfUrl)}
                className="action-button"
                style={{
                  padding: '10px 15px',
                  backgroundColor: '#2ecc71',
                  color: 'white',
                  border: 'none',
                  borderRadius: '4px',
                  cursor: 'pointer'
                }}
              >
                Extract Paper Text
              </button>
            )}
            
            <button 
              onClick={() => window.location.href = `/analyze/${paperId}`}
              className="action-button"
              style={{
                padding: '10px 15px',
                backgroundColor: '#9b59b6',
                color: 'white',
                border: 'none',
                borderRadius: '4px',
                cursor: 'pointer'
              }}
            >
              Analyze with AI
            </button>
          </>
        )}
      </div>
    </div>
  );
}
